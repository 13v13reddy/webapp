name: CI/CD Pipeline

on:
  push:
    branches:
      - feature/*  # Trigger on feature branch pushes for staging
      - main        # Trigger on main branch push for production

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Java Environment
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      
      # Step 3: Build with Maven
      - name: Build with Maven
        run: mvn clean install -DskipTests

      # Step 4: Build Docker Image
      - name: Build Docker Image
        run: docker build -t your-docker-repo/your-image-name:${{ github.sha }} .

      # Step 5: Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      # Step 6: Push Docker Image to Registry
      - name: Push Docker Image
        run: docker push your-docker-repo/your-image-name:${{ github.sha }}

  deploy_staging:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/feature/*'  # Deploy only if the branch is a feature branch
    steps:
      # Step 1: Checkout code (optional for deployment)
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Configure AWS credentials for EKS (Staging Environment)
      - name: Configure AWS Credentials for Staging
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: your-region

      # Step 3: Install kubectl
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      # Step 4: Update EKS Staging Deployment
      - name: Update EKS Staging Deployment
        run: |
          kubectl set image deployment/your-deployment your-container=your-docker-repo/your-image-name:${{ github.sha }}
          kubectl rollout status deployment/your-deployment

  deploy_prod:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'  # Deploy only if the branch is main
    steps:
      # Step 1: Checkout code (optional for deployment)
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Configure AWS credentials for EKS (Production Environment)
      - name: Configure AWS Credentials for Production
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: your-region

      # Step 3: Install kubectl
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      # Step 4: Update EKS Production Deployment
      - name: Update EKS Production Deployment
        run: |
          kubectl set image deployment/your-deployment your-container=your-docker-repo/your-image-name:${{ github.sha }}
          kubectl rollout status deployment/your-deployment
